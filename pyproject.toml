[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "prompt-stacker"
version = "2.0.0"
description = "A powerful automation system for Cursor with beautiful Monokai-themed UI"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Automation System", email = ""}
]
maintainers = [
    {name = "Automation System", email = ""}
]
keywords = ["automation", "cursor", "gui", "tkinter", "pyautogui"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Desktop Environment",
    "Topic :: System :: Systems Administration",
]
requires-python = ">=3.8"
dependencies = [
    "pyautogui>=0.9.54,<1.0.0",
    "pyperclip>=1.8.2,<2.0.0",
    "pywinauto>=0.6.8,<1.0.0",
    "customtkinter>=5.2.0,<6.0.0",
    "pynput>=1.7.6,<2.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0,<8.0.0",
    "pytest-cov>=4.1.0,<5.0.0",
    "pytest-mock>=3.11.0,<4.0.0",
    "black>=23.0.0,<24.0.0",
    "flake8>=6.0.0,<7.0.0",
    "isort>=5.12.0,<6.0.0",
    "mypy>=1.5.0,<2.0.0",
    "pre-commit>=3.3.0,<4.0.0",
    "sphinx>=7.0.0,<8.0.0",
    "sphinx-rtd-theme>=1.3.0,<2.0.0",
    "build>=0.10.0,<1.0.0",
    "twine>=4.0.0,<5.0.0",
    "types-PyYAML>=6.0.0,<7.0.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/prompt-stacker"
Documentation = "https://github.com/yourusername/prompt-stacker#readme"
Repository = "https://github.com/yourusername/prompt-stacker"
"Bug Tracker" = "https://github.com/yourusername/prompt-stacker/issues"

[project.scripts]
prompt-stacker = "automator:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["*"]
exclude = ["tests*", "docs*", "*.tests*"]

[tool.black]
line-length = 127
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 127
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.flake8]
max-line-length = 127
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    "venv",
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=.",
    "--cov-report=term-missing",
    "--cov-report=html",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
