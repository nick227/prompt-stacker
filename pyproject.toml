[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "cursor-automation"
version = "3.0.0"
description = "Cursor Automation System with GUI"
authors = [{name = "Automation System"}]
readme = "README.md"
requires-python = ">=3.8"
dependencies = [
    "pyautogui>=0.9.54,<1.0.0",
    "pyperclip>=1.8.2,<2.0.0",
    "pywinauto>=0.6.8,<1.0.0",
    "customtkinter>=5.2.0,<6.0.0",
    "pynput>=1.7.6,<2.0.0",
    "psutil>=5.9.0,<6.0.0",
]

[project.optional-dependencies]
dev = [
    "ruff>=0.1.0,<1.0.0",
    "pytest>=7.4.0,<8.0.0",
]

[tool.ruff]
# Enable pycodestyle (`E`), Pyflakes (`F`), and isort (`I`) codes
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # Pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
    "N",  # pep8-naming
    "Q",  # flake8-quotes
    "SIM", # flake8-simplify
    "TCH", # flake8-type-checking
    "TID", # flake8-tidy-imports
    "ARG", # flake8-unused-arguments
    "PIE", # flake8-pie
    "LOG", # flake8-logging-format
    "RET", # flake8-return
    "SLF", # flake8-self
    "SLOT", # flake8-slots
    "TRY", # tryceratops
    "COM", # flake8-commas
    "C90", # mccabe
    "DTZ", # flake8-datetimez
    "ISC", # flake8-implicit-str-concat
    "G",   # flake8-logging
    "INP", # flake8-no-pep420
    "PTH", # use-pathlib
    "ERA", # eradicate
    "PGH", # pygrep-hooks
    "PL",  # Pylint
    "RSE", # flake8-raise
    "T20", # flake8-print
    "PYI", # flake8-pyi
    "S",   # bandit
    "BLE", # flake8-blind-except
    "FBT", # flake8-boolean-trap
    "A",   # flake8-builtins
]

# Never enforce `E501` (line length violations)
ignore = [
    "E501",  # line too long, handled by formatter
    "E722",  # do not use bare except, use specific exceptions
    "B008",  # do not perform function calls in argument defaults
    "B006",  # do not use mutable data structures for argument defaults
    "C901",  # too complex
    "PLR0913", # too many arguments to function call
    "PLR0912", # too many branches
    "PLR0915", # too many statements
    "PLR0911", # too many return statements
    "PLR2004", # magic value used in comparison
    "T201", # print found (we want to keep some prints for debugging)
    "BLE001", # do not catch blind exception (we need some broad exception handling)
    "FBT001", # boolean-typed positional argument (acceptable for UI methods)
    "FBT002", # boolean default positional argument (acceptable for UI methods)
    "FBT003", # boolean positional value in function call (acceptable for UI methods)
    "PTH110", # os.path.exists() should be replaced by Path.exists()
    "PTH111", # os.path.expanduser() should be replaced by Path.expanduser()
    "PTH120", # os.path.dirname() should be replaced by Path.parent
    "PTH123", # open() should be replaced by Path.open()
    "F405", # may be undefined, or defined from star imports
    "TRY300", # Consider moving this statement to an else block
    "SIM102", # Use a single if statement instead of nested if statements
    "SIM105", # Use contextlib.suppress(Exception) instead of try-except-pass
    "S110", # try-except-pass detected, consider logging the exception
]

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.8
target-version = "py38"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.ruff.isort]
known-first-party = ["src"]

[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10
